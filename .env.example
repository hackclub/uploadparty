# Root .env example for Docker Compose and local development
# Copy to .env and customize. Do NOT commit real secrets.

# Backend API
PORT=8080
GIN_MODE=debug
FRONTEND_URL=http://localhost:3000
JWT_SECRET=change_me

# Postgres (Cloud SQL)
# When using Cloud SQL Auth Proxy, DB_HOST should be cloudsql-proxy and DB_SSL_MODE=disable (TLS handled by proxy)
# For direct/public IP connections, set DB_HOST to the instance IP/DNS and DB_SSL_MODE=require or verify-full as appropriate
DB_HOST=cloudsql-proxy
DB_PORT=5432
DB_USER=uploadparty
DB_PASSWORD=your_local_db_password
DB_NAME=uploadparty_db
DB_SSL_MODE=disable
# Cloud SQL instance connection name (project:region:instance) for the proxy
INSTANCE_CONNECTION_NAME=your-gcp-project:your-region:your-instance

# Redis
REDIS_PASSWORD=secure_redis_password

# Google Cloud Storage (optional)
GCP_PROJECT_ID=
GCS_BUCKET=uploadparty-beats
# Path to your service account JSON (used by Google client libraries)
# Place the file under ./secrets and keep it out of git
GOOGLE_APPLICATION_CREDENTIALS=./secrets/gcp-service-account.json

# External license directory (generic; keep secrets private)
# LICENSES_PROVIDER can be 'none' (default) or 'airtable'
LICENSES_PROVIDER=none
# LICENSES_TOKEN is a generic bearer token (for Airtable, use API key)
LICENSES_TOKEN=
# LICENSES_DSN is an opaque string; example for Airtable: base=appXXXXXXXXXXXX;table=Licenses
LICENSES_DSN=

# Frontend (Next.js)
NEXT_PUBLIC_SITE_URL=http://localhost:3000
